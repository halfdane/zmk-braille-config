#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define TAPPING_TERM 250
#define DOTS_TIMEOUT 100

#include "includes/basic.dtsi"
#include "includes/dots.dtsi"
#include "includes/de_usintl.dtsi"

/*
  Top left (TL), top right (TR), bottom left (BL) and bottom right (BR)
  are special keys with tap dances and all kinds of fancy stuff
  see below.
  The numbers represent the braille dots, so '1' means 'braille dot 1'

  ╭─────────────────╮
  │  TL  1   4  TR  │
  │      2   5      │
  │      3   6      │
  │  BL  7   8  BR  │
  ╰─────────────────╯
*/

/ {
/* 
TOP-LEFT: 
    - tap 1: left
    - tap 2: escape / LControl
    - tap 3: switch to bootloader mode 
TOP-RIGHT: 
    - tap 1: right
    - tap 2: LAlt
    - tap 3: switch to bootloader mode 
BOTTOM-LEFT:
    - tap 1: SPACE / RALT
    - tap 2: BSPACE
BOTTOM-RIGHT:
    - tap 1: ENTER / LSHIFT
    - tap 2: to base_layer (the one with the letters)
*/
    behaviors {
        top_left: top_left {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LEFT>, <&mt LCTRL ESCAPE>, <&bootloader>;
        };

        top_right: top_right {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp RIGHT>, <&kp LALT>, <&bootloader>;
        };

        bottom_left: tap_dance_bottom_left {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&mt RALT SPACE>, <&kp BACKSPACE>;
        };
        bottom_right: tap_dance_bottom_right {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&mt LSHIFT ENTER>, <&to BASE_LAYER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        base_layer {
            bindings = <
    &top_right          &trans  &trans  &top_left
                        &trans  &trans
                        &trans  &trans
    &bottom_right       &trans  &trans  &bottom_left
            >;
        };

        num_layer {
            bindings = <
    &top_right          &trans  &trans  &top_left
                        &trans  &trans
                        &trans  &trans
    &bottom_right       &trans  &trans  &bottom_left
            >;
        };

    };
};
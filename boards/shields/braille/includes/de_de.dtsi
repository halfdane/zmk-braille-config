// Umlauts: depending on your keyboard layout (german or us-intl), different strategies are used to create umlauts

#define DE_AUML Q
#define DE_OUML SEMI
#define DE_UUML QUOT
#define DE_SUML MINUS

/ {
    // these are used further down
    macros {
        MACRO(AU, <&macro_tap &kp A &kp U>)
        MACRO(EU, <&macro_tap &kp E &kp U>)
        MACRO(EI, <&macro_tap &kp E &kp I>)
        MACRO(CH, <&macro_tap &kp C &kp H>)
        MACRO(SCH, <&macro_tap &kp S &kp C &kp H>)
        MACRO(ST, <&macro_tap &kp S &kp T>)
        MACRO(AUML_U, <&macro_tap &kp DE_AUML &kp U>)
        MACRO(IE, <&macro_tap &kp I &kp E>)
        MACRO(LAYOUT, <&macro_tap &kp D &kp E &kp D &kp E>)
    };

    combos {
        compatible = "zmk,combos";
        BASE_COMBO(LAYOUT_KEY, <D4>,    <&LAYOUT>)
        BASE_COMBO(A, <D1>,             <&kp A>)
        BASE_COMBO(B, <D1 D2>,          <&kp B>)
        BASE_COMBO(C, <D1 D4>,          <&kp C>)
        BASE_COMBO(D, <D1 D4 D5>,       <&kp D>)
        BASE_COMBO(E, <D1 D5>,          <&kp E>)
        BASE_COMBO(F, <D1 D2 D4>,       <&kp F>)
        BASE_COMBO(G, <D1 D2 D4 D5>,    <&kp G>)
        BASE_COMBO(H, <D1 D2 D5>,       <&kp H>)
        BASE_COMBO(I, <D2 D4>,          <&kp I>)
        BASE_COMBO(J, <D2 D4 D5>,       <&kp J>)
        BASE_COMBO(K, <D1 D3 >,         <&kp K>)
        BASE_COMBO(L, <D1 D2 D3 >,      <&kp L>)
        BASE_COMBO(M, <D1 D3 D4>,       <&kp M>)
        BASE_COMBO(N, <D1 D3 D4 D5>,    <&kp N>)
        BASE_COMBO(O, <D1 D3 D5>,       <&kp O>)
        BASE_COMBO(P, <D1 D2 D3 D4>,    <&kp P>)
        BASE_COMBO(Q, <D1 D2 D3 D4 D5>, <&kp Q>)
        BASE_COMBO(R, <D1 D2 D3 D5>,    <&kp R>)
        BASE_COMBO(S, <D2 D3 D4>,       <&kp S>)
        BASE_COMBO(T, <D2 D3 D4 D5>,    <&kp T>)
        BASE_COMBO(U, <D1 D3 D6>,       <&kp U>)
        BASE_COMBO(V, <D1 D2 D3 D6>,    <&kp V>)
        BASE_COMBO(W, <D2 D4 D5 D6>,    <&kp W>)
        BASE_COMBO(X, <D1 D3 D4 D6>,    <&kp X>)
        BASE_COMBO(Y, <D1 D3 D4 D5 D6>, <&kp Y>)
        BASE_COMBO(Z, <D1 D3 D5 D6>,    <&kp Z>)
        BASE_COMBO(AUML, <D3 D4 D5>,    <&kp DE_AUML>)
        BASE_COMBO(OUML, <D2 D4 D6>,    <&kp DE_OUML>)
        BASE_COMBO(UUML, <D1 D2 D5 D6>, <&kp DE_UUML>)
        BASE_COMBO(SUML, <D2 D3 D4 D6>, <&kp DE_SUML>)

        // multiple keys with one braille sign - uses the macros from above
        BASE_COMBO(AU, <D1 D6>,             <&AU>)
        BASE_COMBO(EU, <D1 D2 D6>,          <&EU>)
        BASE_COMBO(EI, <D1 D4 D6>,          <&EI>)
        BASE_COMBO(CH, <D1 D4 D5 D6>,       <&CH>)
        BASE_COMBO(SCH,<D1 D5 D6>,          <&SCH>)
        BASE_COMBO(ST, <D2 D3 D4 D5 D6>,    <&ST>)
        BASE_COMBO(AUML_U, <D3 D4>,         <&AUML_U>)
        BASE_COMBO(IE, <D3 D4 D6>,          <&IE>)

        BASE_COMBO(COMM, <D2>,          <&kp COMMA >)
        BASE_COMBO(SCOL, <D2 D3>,       <&kp SEMI >)
        BASE_COMBO(COLO, <D2 D5>,       <&kp COLON >)
        BASE_COMBO(QUE1, <D2 D6>,       <&kp QUESTION >)
        BASE_COMBO(EXCL, <D2 D3 D5>,    <&kp EXCLAMATION >)
        BASE_COMBO(LEFT, <D2 D3 D5 D6>, <&kp LPAR >)
        BASE_COMBO(DOU1, <D2 D3 D6>,    <&kp DOUBLE_QUOTES >)
        BASE_COMBO(DOU2, <D3 D5 D6>,    <&kp DOUBLE_QUOTES >)
        BASE_COMBO(QUE2, <D3 D4 D6>,    <&kp QUESTION >)
        BASE_COMBO(PERI, <D3>,          <&kp DOT >)
        BASE_COMBO(MINU, <D3 D6>,       <&kp MINUS >)
        BASE_COMBO(QUOT, <D6>,          <&kp APOSTROPHE >)

        BASE_COMBO(TO_NUM, <D3 D4 D5 D6>,   <&to NUM_LAYER>)

        NUM_COMBO(1, <D1>,              <&kp N1>)
        NUM_COMBO(2, <D1 D2>,           <&kp N2>)
        NUM_COMBO(3, <D1 D4>,           <&kp N3>)
        NUM_COMBO(4, <D1 D4 D5>,        <&kp N4>)
        NUM_COMBO(5, <D1 D5>,           <&kp N5>)
        NUM_COMBO(6, <D1 D2 D4>,        <&kp N6>)
        NUM_COMBO(7, <D1 D2 D4 D5>,     <&kp N7>)
        NUM_COMBO(8, <D1 D2 D5>,        <&kp N8>)
        NUM_COMBO(9, <D2 D4>,           <&kp N9>)
        NUM_COMBO(0, <D2 D4 D5>,        <&kp N0>)
    };
};